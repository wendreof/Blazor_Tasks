@page "/"
@inject HttpClient http

<h1>Tasks</h1>
<hr/>

@if(tarefas == null)
{
    <p>Carregando...</p>
}
else if(!tarefas.Any())
{
    <p>Ainda não existem tarefas...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Ação</th>
                <th>Data</th>
                <th>Descriçao</th>
                <th>Concluida</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in tarefas)
            {
                <tr>
                    <td><button @onclick="@(() => RemoveTarefa(item.Id))"><i class="oi oi-trash"></i></button></td>
                    <td>@item.DataCriacao</td>
                    <td>@item.Descricao</td>
                    <td><input type="checkbox" @bind="item.Concluida" />@item.Concluida</td>
                </tr>
            }
        </tbody>
    </table>
}

@if(tarefas != null)
{
    <div class="form-group">
        <label>Task</label>
        <input type="Text" placeholder="Informe a tarefa" @bind="NovaTarefa">
        <button class="btn btn-primary" @onclick="AdicionarNovaTarefa">Registrar Tarefa</button>

    </div>
}

@code{

    protected override async Task OnInitializedAsync()
    {
        tarefas = await http.GetFromJsonAsync<List<Tarefa>>("dados/tarefas.json");
    }

    public class Tarefa
    {
        public Guid Id { get; set; }
        public string Descricao { get; set; } = string.Empty;
        public bool Concluida { get; set; }
        public DateTime DataCriacao { get; set; }
    }

    private string NovaTarefa = "";

    private List<Tarefa> tarefas = new();


    void AdicionarNovaTarefa()
    {
        if (!string.IsNullOrWhiteSpace(NovaTarefa))
        {
            tarefas.Add(new Tarefa
            {
                DataCriacao = DateTime.Now,
                Descricao = NovaTarefa,
                Id = Guid.NewGuid()
            });
            NovaTarefa = "";
        } 
    }

    private void RemoveTarefa(Guid id)
    {
        tarefas.Remove(tarefas.FirstOrDefault(x => x.Id == id));
    }
}